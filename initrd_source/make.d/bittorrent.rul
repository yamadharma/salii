#
#	$Id$
#    vi: set filetype=make:
#
#	2005-12-28 Andrea Righi
#   	- Bittorrent binaries
#

BITTORRENT_VERSION      := 4.4.0
BITTORRENT_DIR          := $(INITRD_SRC_DIR)/BitTorrent-$(BITTORRENT_VERSION)
BITTORRENT_TARBALL      := BitTorrent-$(BITTORRENT_VERSION).tar.gz
# BITTORRENT_URL          := http://www.bittorrent.com/dl/$(BITTORRENT_TARBALL)
BITTORRENT_URL          := http://download.systemimager.org/pub/bittorrent/$(BITTORRENT_TARBALL)
#XXX BITTORRENT_BINARY       := $(BITTORRENT_DIR)/bittorrent.py
BITTORRENT_PATCHES      := $(shell ls $(INITRD_PATCH_DIR)/bittorrent.*.patch 2>/dev/null | sort)

ALL_SOURCE += $(INITRD_SRC_DIR)/$(BITTORRENT_TARBALL)

PHONY += bittorrent
bittorrent:  $(BITTORRENT_DIR).build

PHONY += bittorrent_install
bittorrent_install:  $(BITTORRENT_DIR).install
$(BITTORRENT_DIR).install:	$(BITTORRENT_DIR).build \
							$(INITRD_BUILD_DIR).prep \
							$(CX_FREEZE_DIR).build
	$(CX_FREEZE_BINARY) \
		--install-dir=$(INITRD_BUILD_DIR)/lib/bittorrent \
		--exclude-modules=gobject,pango,gtk \
		$(BITTORRENT_DIR)/torrentinfo-console.py
	$(CX_FREEZE_BINARY) \
		--install-dir=$(INITRD_BUILD_DIR)/lib/bittorrent \
		--exclude-modules=gobject,pango,gtk \
		$(BITTORRENT_DIR)/bittorrent-console.py
	#
	# Explicit copy shared libraries needed by bittorrent binaries.
	( \
		for l in $$(ldd $(INITRD_BUILD_DIR)/lib/bittorrent/* 2>/dev/null | sed -ne 's/.*=> \(.*\) (.*)/\1/p' | sort -u); do cp -pf $$l $(INITRD_BUILD_DIR)/lib; done \
	)
	#
	# Make sure the dynamic linker is present.
	(for l in $$(readelf --program-headers $(INITRD_BUILD_DIR)/lib/bittorrent/* | sed -ne 's/^.*\[Requesting program interpreter: \(.*\)\]$$/\1/p' | sort -u); do cp -pf $$l $(INITRD_BUILD_DIR)/lib; done )
	#
	# Create the bittorrent links.
	rm -f $(INITRD_BUILD_DIR)/bin/torrentinfo-console
	rm -f $(INITRD_BUILD_DIR)/bin/bittorrent-console


$(BITTORRENT_DIR).build:	$(BITTORRENT_DIR).unpack
	touch $@

$(BITTORRENT_DIR).unpack:	$(INITRD_DIR)/make.d/bittorrent.rul \
						$(INITRD_SRC_DIR)/$(BITTORRENT_TARBALL) \
						$(BITTORRENT_PATCHES)
	rm -rf $(BITTORRENT_DIR)
	cd $(INITRD_SRC_DIR) && tar -xvzf $(BITTORRENT_TARBALL)
	cd $(BITTORRENT_DIR) && cat $(BITTORRENT_PATCHES) < /dev/null | patch -p1
	touch $@

$(INITRD_SRC_DIR)/$(BITTORRENT_TARBALL):
	mkdir -p $(INITRD_SRC_DIR)
	$(GETSOURCE) $(BITTORRENT_URL) $(INITRD_SRC_DIR)

PHONY += bittorrent_clean
bittorrent_clean:
	rm -rf $(BITTORRENT_DIR)
	rm -f  $(BITTORRENT_DIR).unpack
	rm -f  $(BITTORRENT_DIR).build

