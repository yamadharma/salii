
p_stage "Configuring network"

## First we configure the loopback device
p_service "Enabling loopback device"
do_ifup lo

if [ -n "${DEVICE}" ]
then
    p_service "Configuring interface ${DEVICE}"

    if [ -n "${IPADDR}" -a -n "${NETMASK}" ]
    then
        p_comment 0 "Static configuration with ip ${IPADDR} and netmask ${NETMASK}"

        add_interface $DEVICE static $IPADDR $NETMASK

        save_param IPADDR $IPADDR
        save_param NETMASK $NETMASK

        if [ -n "${NAMESERVER}" ]
        then
            echo "nameserver ${NAMESERVER}" > /etc/resolv.conf
            save_param NAMESERVER $NAMESERVER
            if [ -n "${DOMAIN}" ]
            then
                echo "domain ${DOMAIN}" >> /etc/resolv.conf
                save_param DOMAIN_NAME $DOMAIN_NAME
            fi
        else
            p_comment 0 "Unable to create a resolv.conf file"
        fi

    else
        p_comment 0 "Using DHCP"

        add_interface $DEVICE dhcp
    fi

    do_ifup $DEVICE

    if [ ! $? -eq 0 ]
    then
        p_comment 0 "Unable to configure network device ${DEVICE}"
        return 1
    fi
    
    if [ -n "${GATEWAY}" ]
    then
        p_comment 0 "Trying to set default gateway to ${GATEWAY}"
        do_gateway $GATEWAY

        if [ ! $? -eq 0 ]
        then
            p_comment 0 "Unable to configure default route"
        fi
    fi
else
    p_service "Configuring all network interfaces with DHCP"

    for NIC in $(ls -1 /sys/class/net | grep -v lo)
    do
        add_interface $NIC dhcp
    done

    for NIC in $(ls -1 /sys/class/net | grep -v lo)
    do
        {
            p_comment 0 "Configuring interface ${NIC}"
            do_ifup $NIC

            if [ $? -eq 0 ]
            then
                p_comment 0 "Interface $NIC configured"
                touch /tmp/network_available
            else
                p_comment 0 "Interface $NIC failed"
            fi
        } &
    done

    # Wait to finish
    wait 

    if [ ! -f "/tmp/network_available" ]
    then
        p_service "No network connection found!"
        return 1
    fi
fi

if [ -z "${HOSTNAME}" ]
then
	HOSTNAME=$(hostname)
fi

save_param HOSTNAME $HOSTNAME

return 0
