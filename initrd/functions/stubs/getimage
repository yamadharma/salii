old_getimage(){

    if [ "x$BITTORRENT" = "xy" ]
    then
	PROTOCOL="bittorrent"
	STAGING=$BITTORRENT_STAGING
    else
	PROTOCOL="rsync"
    fi

}

## Contents of this function has been copied from the master file
getimage_bittorrent(){

    if [ -f "${TORRENTS_DIR}/image-${IMAGENAME}.tar.gz.torrent" ]; then
       	bittorrent_tarball="image-${IMAGENAME}.tar.gz"
       	compress='z'
    elif [ -f "${TORRENTS_DIR}/image-${IMAGENAME}.tar.torrent" ]; then
       	bittorrent_tarball="image-${IMAGENAME}.tar"
       	compress=''
    else
       	logmsg "error: cannot find a valid torrent file for the image ${IMAGENAME}"
       	shellout
    fi

    # Evaluate the staging directory
    if [ -z $STAGING ]; then
        logmsg bittorrent_autodetect_staging_dir
        STAGING=`bittorrent_autodetect_staging_dir ${TORRENTS_DIR}/${bittorrent_tarball}.torrent`
        if [ -z $STAGING ]; then
            logmsg ""
            logmsg "error: cannot find a staging directory to save file: $bittorrent_tarball"
            logmsg "Try to increase the size of a partition (like /tmp) in your patitioning schema"
            logmsg "to fit the image into a staging directory."
            logmsg ""
            shellout
        fi
        logmsg "--> staging in: $STAGING"
    fi

    # Download image from peers
    logmsg "Start downloading image using torrent ${bittorrent_tarball}.torrent"
    logmsg ""
    logmsg "--> INFO: remember to start /etc/init.d/systemimager-server-bittorrent on the image server!"
    logmsg ""

    bittorrent_get_file ${TORRENTS_DIR}/${bittorrent_tarball}.torrent ${STAGING}

    if [ ! -z $MONITOR_SERVER ]; then
        stop_report_task 101
    fi

    # Extract image.
    logmsg "Extracting image from ${bittorrent_tarball} ..."
    cd /a/ || shellout

    case $compress in
        'z')
                zcat ${STAGING}/${bittorrent_tarball} | tar -px${VERBOSE_OPT}f -
        ;;

        *)
                tar -px${VERBOSE_OPT}f {STAGING}/${bittorrent_tarball}
        ;;
     esac

    rm -f ${STAGING}/${bittorrent_tarball}
    unset bittorrent_tarball

}

getimage_rsync(){

   logmsg "rsync -aHS${VERBOSE_OPT} --exclude=lost+found/ --exclude=/proc/* --numeric-ids ${IMAGESERVER}::${IMAGENAME}/ /a/"
   rsync -aHS${VERBOSE_OPT} --exclude=lost+found/ --exclude=/proc/* --numeric-ids ${IMAGESERVER}::${IMAGENAME}/ /a/ > /dev/console || shellout
   if [ ! -z $MONITOR_SERVER ]; then
	stop_report_task 101
   fi

}

getimage(){

	# New way of checking which method must be used!
	case "$PROTOCOL" in
		"bittorrent")
			getimage_bittorrent
		;;
		"rsync")
			getimage_rsync
		;;
		*)
			logmsg
			logmsg "Could not find a way to retrieve a image"
			logmsg
			shellout
		;;
	esac
}
