
################################################################################
#
# Usage: ping_test destination
#
## SALI ping_test has been moved up, because this function is used to determine which
## interface reaches the IMAGESERVER
ping_test() {                                                                              
                                                                                           
    PING_DESTINATION=$1                                                                    
                                                                                           
    PING_RESULT=1                                                                          
                                                                                           
    p_comment 10 "trying to ping your imagserver, ${PING_DESTINATION}"                     
                                                                                           
    # Ping test code submitted by Grant Noruschat <grant@eigen.ee.ualberta.ca>             
    # modified slightly by Brian Finley.                                                   
    PING_COUNT=1                                                                           
    PING_EXIT_STATUS=1                                                                     
    while [ $PING_EXIT_STATUS -ge 0 ]                                                      
    do                                                                                     
                                                                                           
        p_comment 10 "ping attempt ${PING_COUNT}"                                          
        ping -c 1 $PING_DESTINATION > /dev/null 2>&1                                       
        PING_EXIT_STATUS=$?                                                                
                                                                                           
        if [ "$PING_EXIT_STATUS" = "0" ]                                                   
        then                                                                               
                p_comment 10 "we have connectivity to your IMAGESERVER!"                                       
                PING_RESULT=0                                                              
                break                                                                      
        fi                                                                                 
                                                                                           
        PING_COUNT=$(( $PING_COUNT + 1 ))                                                  
        if [ "$PING_COUNT" = "4" ]                                                         
        then                                                                               
                return                                                                     
        fi                                                                                 
                                                                                           
    done                                                                                   
                                                                                               
}

###############################################################################
#
# Usage: dhpc device
#
## SALI this method has been added to enable networking for a specific interface
#
dhcp(){                                                                                    
                                                                                           
        DHCP_RESULT=1                                                                                    
                                                                                           
        p_comment 10 "starting udhcp on interface ${1}"                                    
                                                                                           
        if [ $VERBOSELEVEL -ge "256" ]                                                     
        then                                                                               
                udhcpc -i $1 -n -t 12                                                      
        else                                                                               
                udhcpc -i $1 -n -t 12 > /dev/null 2>&1                                     
        fi                                                                                 
                                                                                           
        if [ -s /tmp/udhcpc ]                                                              
        then                                                                               
                . /tmp/udhcpc                                                              
                                                                                           
                if [ -n "${IPADDR}" ]                                                      
                then                                                                       
                        if [ -z "${IMAGESERVER}" ]                                         
                        then                                                               
                                if [ -n "${SALIIMAGESRV}" ]                                
                                then                                                       
                                        IMAGESERVER=$SALIIMAGESRV                          
                                else                                                       
                                        p_comment 10 "the imageserver could not be located"
                                        echo 1                                                                 
                                        return                                             
                                fi                                                         
                        fi                                                                 
                                                                                           
                        ping_test $IMAGESERVER                                             
                                                                                           
                        if [ $PING_RESULT -eq 0 ]                                          
                        then                                                               
                                DHCP_RESULT=0                                              
                        fi                                                                 
                                                                                               
                fi                                                                             
        fi                                                                                     
                                                                                               
}

#################################################################################
#
# Usage: dhcp_guess
#
## SALI This method uses the /sys/class/net to determine wich interfaces are
## available on the current machine. This function stops until an interface
## is able to connect with the imageserver.
dhcp_guess(){                                                                              
                                                                                           
        NICS=$(ls -1 /sys/class/net | grep -v lo)                                          
                                                                                           
        p_comment 0 "choosing one of the following interfaces: $( echo $NICS)"                      
                                                                                           
        DHCPG_RESULT=1                                                                           
                                                                                           
        for NIC in $NICS                                                                   
        do                                                                                 
                p_comment 10 "starting dhcp for interface ${NIC}"                          
                dhcp $NIC                                                                  
                                                                                           
                if [ $DHCP_RESULT -eq 0 ]                                                  
                then                                                                       
                        p_comment 10 "succesfull configuration for interface ${NIC}"                           
                        DHCPG_RESULT=0                                                           
                        DEVICE=$NIC                                                        
                        break                                                              
                fi                                                                         
        done                                                                               
}

################################################################################
#
get_base_hostname() {
	BASE_HOSTNAME=$(echo $HOSTNAME | sed "s/[.0-9].*$//")
} #

################################################################################
#
get_group_name() {
    if [ -f ${SCRIPTS_DIR}/cluster.txt ]; then
        [ -z "$GROUPNAMES" ] && \
            GROUPNAMES=$(echo $(grep "^${HOSTNAME}:" ${SCRIPTS_DIR}/cluster.txt | cut -d: -f2 | tr "\n" ' ') | uniq)
        [ -z "$IMAGENAME" ] && \
            IMAGENAME=`grep "^${HOSTNAME}:" ${SCRIPTS_DIR}/cluster.txt | cut -d: -f3 | grep -v '^[[:space:]]*$' | sed -ne '1p'`
        if [ -z "$GROUP_OVERRIDES" ]; then
            GROUP_OVERRIDES=$(reverse $(echo $(grep "^${HOSTNAME}:" ${SCRIPTS_DIR}/cluster.txt | cut -d: -f4 | tr "\n" ' ') | uniq))
            # Add the global override on top (least important).
            GROUP_OVERRIDES="`sed -ne 's/^# global_override=:\([^:]*\):$/\1/p' ${SCRIPTS_DIR}/cluster.txt` $GROUP_OVERRIDES"
        fi
    fi
}

