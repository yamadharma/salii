
################################################################################
#
# Usage: ping_test destination
#
## SALI ping_test has been moved up, because this function is used to determine which
## interface reaches the IMAGESERVER
ping_test() {                                                                              
                                                                                           
    PING_DESTINATION=$1                                                                    
                                                                                           
    PING_RESULT=1                                                                          
                                                                                           
    p_comment 20 "trying to ping your imagserver, ${PING_DESTINATION}"                     
                                                                                           
    # Ping test code submitted by Grant Noruschat <grant@eigen.ee.ualberta.ca>             
    # modified slightly by Brian Finley.                                                   
    PING_COUNT=1                                                                           
    PING_EXIT_STATUS=1                                                                     
    while [ $PING_EXIT_STATUS -ge 0 ]                                                      
    do                                                                                     
                                                                                           
        p_comment 20 "ping attempt ${PING_COUNT}"                                          
        ping -c 1 $PING_DESTINATION > /dev/null 2>&1                                       
        PING_EXIT_STATUS=$?                                                                
                                                                                           
        if [ "$PING_EXIT_STATUS" = "0" ]                                                   
        then                                                                               
                p_comment 20 "we have connectivity to your IMAGESERVER!"                                       
                PING_RESULT=0                                                              
                break                                                                      
        fi                                                                                 
                                                                                           
        PING_COUNT=$(( $PING_COUNT + 1 ))                                                  
        if [ "$PING_COUNT" = "4" ]                                                         
        then                                                                               
                return                                                                     
        fi                                                                                 
                                                                                           
    done                                                                                   
                                                                                               
}

ping_test_imageserver(){
    PING_SERVER=1

    if [ -z "${IMAGESERVER}" ]
    then
        for file in $(ls -1 /tmp/udhcpc.*)
        do
            . $file
            if [ -n $SALIIMAGESRV ]
            then
                ping_test $SALIIMAGESRV

                if [ $PING_RESULT -eq 0 ]
                then
                    save_param IMAGESERVER $SALIIMAGESRV
                    PING_SERVER=0
                    break
                fi
            fi
        done
    else
        ping_test $IMAGESERVER
        save_param IMAGESERVER $IMAGESERVER
        
        if [ $PING_RESULT -eq 0 ]
        then
            PING_SERVER=0
        fi
    fi
}


## 
# Wrapper around the ifup command, due to VERBOSE logging
do_ifup() {

    if [ $VERBOSE_LEVEL -ge "256" ]
    then
        /sbin/ifup $1
    else
        /sbin/ifup $1 2&>1 > /dev/null
    fi
}
do_gateway() {

    if [ $VERBOSE_LEVEL -ge "256" ]
    then
        /sbin/route add default gw $1
    else
        /sbin/route add default gw $1 2&>1 > /dev/null
    fi
}


################################################################################
#
get_base_hostname() {
	BASE_HOSTNAME=$(echo $HOSTNAME | sed "s/[.0-9].*$//")
} #

################################################################################
#
get_group_name() {
    if [ -f ${SCRIPTS_DIR}/cluster.txt ]; then
        [ -z "$GROUPNAMES" ] && \
            GROUPNAMES=$(echo $(grep "^${HOSTNAME}:" ${SCRIPTS_DIR}/cluster.txt | cut -d: -f2 | tr "\n" ' ') | uniq)
        [ -z "$IMAGENAME" ] && \
            IMAGENAME=`grep "^${HOSTNAME}:" ${SCRIPTS_DIR}/cluster.txt | cut -d: -f3 | grep -v '^[[:space:]]*$' | sed -ne '1p'`
        if [ -z "$GROUP_OVERRIDES" ]; then
            GROUP_OVERRIDES=$(reverse $(echo $(grep "^${HOSTNAME}:" ${SCRIPTS_DIR}/cluster.txt | cut -d: -f4 | tr "\n" ' ') | uniq))
            # Add the global override on top (least important).
            GROUP_OVERRIDES="`sed -ne 's/^# global_override=:\([^:]*\):$/\1/p' ${SCRIPTS_DIR}/cluster.txt` $GROUP_OVERRIDES"
        fi
    fi
}

