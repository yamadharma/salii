
p_log(){
	printf "$1" >> /log/monitor.log
}

p_whitespace(){
	AMOUNT=$1

	LINE=""

	for i in $( seq $AMOUNT )
	do
		LINE="${LINE} "
	done

	echo "${LINE}"
}

p_section(){
	COLS=$(stty size | awk '{print $2}')
	COLS=$(( $COLS - 2 ))

	if [ -n "${1}" ]
	then
		LENGTH=$(echo "${1}" | wc -L)
		COLS=$(( $COLS - $LENGTH ))

		if [ $COLS -ge $LENGTH ]
		then
			LEFT=$(( $COLS / 2 ))
			RIGHT=$(( $COLS - $LEFT ))

			LINE="[$(p_whitespace $LEFT)${1}$(p_whitespace $RIGHT)]\n"
		else
			LINE="[ ${1} ]\n"
		fi
	fi

	p_log "${LINE}"
	printf "${LINE}"
}

p_header(){
	printf "\n"
	p_section "Welcome to SALI $(cat /etc/sali_version)"
	p_section "https://subtrac.sara.nl/oss/sali"
}

p_separator(){
	COLS=$(/bin/stty size | awk '{print $2}')

	LINE="\n"

	for col in $(seq 0 $COLS)
	do
		if [ $col -eq $COLS ]
		then
			LINE="${LINE}\n\n"
		else
			LINE="${LINE}-"
		fi
	done

	p_log "${LINE}"
	printf "${LINE}"
}

p_stage(){
	LINE="\n> ${1}\n"

	p_log "${LINE}"
	printf "${LINE}"
}

p_service(){
	LINE="  :: $1\n"

	p_log "${LINE}"
	printf "${LINE}"
}

p_comment(){
	LEVEL=$1

	if [ $VERBOSELEVEL -ge $LEVEL ]
	then
		LINE="     .$2\n"

		p_log "${LINE}"
		printf "${LINE}"
	fi
}
