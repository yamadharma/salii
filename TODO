#
# $Id: TODO 4454 2008-05-03 09:39:11Z arighi $
#  vi:set filetype=conf tw=80:
#

Priority classification:
(9)  next minor release
(8)  next release
(7)  as soon as possible
(6)  soon
(5)  should be included
(4)  nice to have
(3)  consider including
(2)  maybe not
(1)  probably not
(-)  unclassified

TODO list for SystemImager
==========================
(8) Introduce a new command (si_power) to control the power of the clients
    (turn on/off/reboot, etc.), see also: ipmitool, BMC.

(8) Create a new module called SystemImager::Monitor to implement all the common
    monitoring functions.

    Rename the monitoring commands as following:

    - si_monitord: SystemImager monitoring daemon
    - si_monitor: console interface (dump clients.xml info to stdout in a simple
      txt format)
    - si_monitorcurses: ncurses-based interface
    - si_monitortk: perl-Tk interface

(7) Include mkrecoveryISO in the standard release.

(5) Implement si_getdebuginfo to generate a tar.gz containing all the system
    informations that could help to debug user problems (systemimager versions,
    partitioning schema, kernel, distribution used, etc). In this way a user
    that needs support can simply post the tarball to the list and we'll have
    immediately an overview of the system.

(4) Move all LVM info into the <lvm> section of autoinstallscript.conf.

    - No longer store any lvm info in the <disk> and/or <raid> sections
    - Collect PV info and store it in the <lvm_group> section
        <lvm>
          <lvm_group>
            <pv device="/dev/sda1" />
            <pv device="/dev/md0"  />
            <pv device="/dev/md1"  />
            <lv name="swap" size="524288K" />
            <etc...>
          </lvm_group>
        </lvm>

    - Need to modify:
        - Server.pm
        - Common.pm
        - autoinstallscript.template

(4) si_monitortk improvements (thanks Bernard for the good suggestions):
    - support multiple virtual console instances at the same time
    - add a popup menu on the client entries to display detailed info
      and perform special actions (like open virtual console, check
      availability of the node, delete entry, etc)
    - tabbed view for virtual console

(4) Implement a GUI to perform all the common systemimager operations

(4) Implement pre/post-update scripts (to be ran with si_updateclient)

(2) Add a kernel-devel tree package, like those that ship with RedHat, 
    Ubuntu, etc. There's just enough data to build boot-kernel modules 
    against, but nothing else. 

    Ie: kernel-headers. (Jeremy Siadal suggestion)

