#
#   vi: filetype=make:
#
#   2004.07.26  Brian Elliott Finley
#   - added perl bit to change EXTRAVERSION automatically.
#   2004.10.08  Brian Elliott Finley
#   - add bit for yellow dog linux (YDL) kernel
#   2005.07.12  Brian Elliott Finley
#	- upgrade kernel version for x86_64 and ia64 to 2.6.10
#	  patch submitted by Erich Focht
#
# SVN Info:
# 	$Id$
#       $URL: https://subtrac.sara.nl/oss/svn/sali/trunk/make.d/kernel.rul $

ifeq ($(ARCH),i386)
	LINUX_VERSION = 2.6.36.4
	LINUX_IMAGE = $(LINUX_SRC)/arch/i386/boot/bzImage
	LINUX_TARGET = bzImage
	LINUX_DIR = linux-$(LINUX_VERSION)
endif

ifeq ($(ARCH),x86_64)
	LINUX_VERSION = 2.6.36.4
	LINUX_IMAGE = $(LINUX_SRC)/arch/x86_64/boot/bzImage
	LINUX_TARGET = bzImage
	LINUX_DIR = linux-$(LINUX_VERSION)
endif

ifeq ($(ARCH),ppc64)
	LINUX_VERSION = 2.6.36.4
	LINUX_IMAGE = $(LINUX_SRC)/arch/powerpc/boot/zImage
	LINUX_TARGET = zImage
	LINUX_DIR = linux-$(LINUX_VERSION)
endif

LINUX_SRC := $(SRC_DIR)/$(LINUX_DIR)
LINUX_TARBALL := linux-$(LINUX_VERSION).tar.bz2
LINUX_URL = ftp://ftp.sara.nl/pub/sali/sources/$(LINUX_TARBALL)
LINUX_INFO = http://kernel.org
LINUX_CONFIG := $(PATCH_DIR)/linux.$(ARCH).config

## names for kernel patch files can be of 2 forms:
##  1) patches that apply to all architectures
##       linux.all.XX<name>.patch
##  2) patch applies to a subset of arches
##    linux.<arch1>,<arch2>,...,<archN>.XX<name>.patch
LINUX_PATCHES = $(sort $(shell find $(PATCH_DIR) \
                                    -name "linux.$(ARCH).*.patch" -o \
                                    -name "linux.all.*.patch" -o \
                                    -name "linux.$(ARCH),*.*.patch" -o \
                                    -name "linux.*,$(ARCH),*.*.patch" -o \
                                    -name "linux.*,$(ARCH).*.patch"))
ALL_SOURCE += $(SRC_DIR)/$(LINUX_TARBALL)

PHONY += kernel_list_patches
kernel_list_patches:
	@echo $(LINUX_PATCHES)

# install the kernel that autoinstall clients will boot from during
# autoinstallation
PHONY += install_kernel
install_kernel:	$(LINUX_IMAGE)
	mkdir -p $(BOOT_BIN_DEST)
	$(SI_INSTALL) -m 644 $(LINUX_IMAGE) \
	    $(BOOT_BIN_DEST)/kernel
	$(SI_INSTALL) -m 644 $(LINUX_CONFIG) \
	    $(BOOT_BIN_DEST)/config

# build the kernel that autoinstall clients will boot from during
# autoinstallation
PHONY += kernel
kernel:	$(LINUX_IMAGE)

$(LINUX_IMAGE): $(SRC_DIR)/patched_kernel-stamp
	$(MAKE) -C $(LINUX_SRC) -j $(NCPUS) $(LINUX_TARGET)

PHONY += patched_kernel-stamp
patched_kernel-stamp:	$(SRC_DIR)/patched_kernel-stamp

$(SRC_DIR)/patched_kernel-stamp:	$(SRC_DIR)/$(LINUX_TARBALL) \
					$(LINUX_CONFIG) $(LINUX_PATCHES)
	rm -rf $(LINUX_SRC)
	@echo -n Extracting kernel source...
	@cd $(SRC_DIR) && tar xjf $(LINUX_TARBALL)
	@echo done
	@cd $(LINUX_SRC) && \
   	  $(foreach patch, $(LINUX_PATCHES), \
  	    echo -n Applying `basename $(patch)`... && cat $(patch) | patch -s -p1 && echo done. &&) /bin/true
	cp -a $(LINUX_CONFIG) $(LINUX_SRC)/.config
	perl -pi -e "s/^EXTRAVERSION =\s*(\S*)\s*\n/EXTRAVERSION = \1-sali_v$(VERSION)\n/" $(LINUX_SRC)/Makefile
	$(MAKE) -C $(LINUX_SRC) oldconfig
	touch $(SRC_DIR)/patched_kernel-stamp

PHONY += get_kernel_source
get_kernel_source:	$(SRC_DIR)/$(LINUX_TARBALL)

$(SRC_DIR)/$(LINUX_TARBALL):
	[ -d $(SRC_DIR) ] || mkdir -p $(SRC_DIR)
	$(GETSOURCE) $(LINUX_URL) $(SRC_DIR)

PHONY += modules
modules:	$(SRC_DIR)/modules_build-stamp

$(SRC_DIR)/modules_build-stamp: $(LINUX_IMAGE)
	$(MAKE) -C $(LINUX_SRC) -j $(NCPUS) modules
	touch $(SRC_DIR)/modules_build-stamp

PHONY += kernel_clean
kernel_clean:
	rm -rf $(LINUX_SRC)
	rm -f $(SRC_DIR)/patched_kernel-stamp
	rm -f $(SRC_DIR)/modules_build-stamp
