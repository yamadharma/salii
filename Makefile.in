#
#	"SALI"  
#
#   Copyright (C) 2010 SARA Computing and Networking Services
#   
#   $Id$
# 	 vi: set filetype=make:
#

## BEGIN General options
#
VERSION=$(shell cat VERSION)

ARCH=@ARCH@
ARCH_BIT=@ARCH_BIT@
OS=@OS@
OS_RELEASE=@OS_RELEASE@

ifeq ($(ARCH_BIT),64)
	LIBDIR=/lib/x86_64-linux-gnu
else
	LIBDIR=lib
endif

RELEASE_DOCS = CHANGELOG LICENSE CREDITS README VERSION AUTHORS
NCPUS=$(shell egrep -c '^processor' /proc/cpuinfo )
#
## END General options

## BEGIN location options
#
ROOT_DIR=$(CURDIR)

# TAR directory
TAR_DIR=$(ROOT_DIR)/tar

# EXAMPLE directory
EXAMPLE_DIR=example

# contrib directory
CONTRIB_DIR=contrib

# The basic
SRC_DIR=$(ROOT_DIR)/src
STAMP_DIR=$(SRC_DIR)

# The kernel locations
KERNEL_DIR=$(ROOT_DIR)/kernel
KERNEL_MAKED_DIR=$(KERNEL_DIR)/make.d
KERNEL_PATCH_DIR=$(KERNEL_DIR)/patches
KERNEL_BUILD_DIR=$(KERNEL_DIR)/build_dir

# The initrd locations
INITRD_DIR=$(ROOT_DIR)/initrd
INITRD_MAKED_DIR=$(INITRD_DIR)/make.d
INITRD_PATCH_DIR=$(INITRD_DIR)/patches
INITRD_BUILD_DIR=$(INITRD_DIR)/build_dir

INITRD_BUILD_MAN_DIR=$(INITRD_BUILD_DIR)/usr/share/man
INITRD_BUILD_BIN_DIR=$(INITRD_BUILD_DIR)/bin
INITRD_BUILD_SBIN_DIR=$(INITRD_BUILD_DIR)/sbin
#
## END location options

## BEGIN utilities
#
GETSOURCE=$(ROOT_DIR)/tools/getsource
COPYLIBS=$(ROOT_DIR)/tools/copy_libs
COPYFIRMWARES=$(ROOT_DIR)/tools/copy_firmwares
#
## END utilities

include $(KERNEL_MAKED_DIR)/kernel.rul
include $(KERNEL_MAKED_DIR)/zlib.rul
include $(INITRD_DIR)/initrd.rul

# build everything, install nothing
build:	tar_clean initrd_install kernel $(ROOT_DIR)/build

tar_clean:
	( rm -rf $(TAR_DIR)/* )

$(ROOT_DIR)/build:

	( mkdir -p -m 0755 $(TAR_DIR)/sali-$(VERSION)/$(ARCH) )

	( make INSTALL_MOD_PATH=$(INITRD_BUILD_DIR) -C $(LINUX_DIR) modules_install )
	$(COPYFIRMWARES) $(SRC_DIR) $(INITRD_BUILD_DIR)

	## make the binaries smaller
	#
	strip $(INITRD_BINARIES)

	( cd "$(INITRD_BUILD_DIR)" && find . | cpio --quiet -o -H newc > "$(TAR_DIR)/sali-$(VERSION)/$(ARCH)/initrd" )
	( cd "$(TAR_DIR)/sali-$(VERSION)/$(ARCH)" && bzip2 --best --force initrd && mv initrd.bz2 initrd.img )
	( cp "$(LINUX_IMAGE)" "$(TAR_DIR)/sali-$(VERSION)/$(ARCH)/kernel" )


ifeq ($(OS),suse) 
	( cp "$(LINUX_DIR)/vmlinux" "$(TAR_DIR)/sali-$(VERSION)/$(ARCH)/vmlinux" )
	mkzimage --vmlinux "$(TAR_DIR)/sali-$(VERSION)/$(ARCH)/vmlinux" --initrd "$(TAR_DIR)/sali-$(VERSION)/$(ARCH)/initrd.img" --output "$(TAR_DIR)/sali-$(VERSION)/$(ARCH)/vmlinuz" 
endif

	$(foreach doc, $(RELEASE_DOCS), cp $(ROOT_DIR)/$(doc) $(TAR_DIR)/sali-$(VERSION)/$(doc);)

	cp -a $(ROOT_DIR)/$(EXAMPLE_DIR) $(TAR_DIR)/sali-$(VERSION)
	rm -rf $(TAR_DIR)/sali-$(VERSION)/$(EXAMPLE_DIR)/.svn
	rm -rf $(TAR_DIR)/sali-$(VERSION)/$(EXAMPLE_DIR)/post-install/.svn

	cp -a $(ROOT_DIR)/$(CONTRIB_DIR) $(TAR_DIR)/sali-$(VERSION)
	rm -rf $(TAR_DIR)/sali-$(VERSION)/$(CONTRIB_DIR)/.svn

	mkdir -p $(TAR_DIR)/sali-$(VERSION)/bootdisk
	mkdir -p $(TAR_DIR)/sali-$(VERSION)/bootdisk/kernel
	mkdir -p $(TAR_DIR)/sali-$(VERSION)/bootdisk/images
	cp -a $(ROOT_DIR)/bootdisk/isolinux $(TAR_DIR)/sali-$(VERSION)/bootdisk/isolinux
	cp -a $(ROOT_DIR)/bootdisk/sali_create_bootdisk $(TAR_DIR)/sali-$(VERSION)/bootdisk
	chmod +x $(TAR_DIR)/sali-$(VERSION)/bootdisk/sali_create_bootdisk

	cp -a $(ROOT_DIR)/server $(TAR_DIR)/sali-$(VERSION)
	find $(TAR_DIR) -type d -name .svn | xargs rm -r

	touch $@

tarball: build
	cd $(TAR_DIR) && tar -pczf $(ROOT_DIR)/sali-$(ARCH)-$(VERSION).tar.gz *

.PHONY:	help
help:  show_targets

.PHONY: clean
clean:
	@echo "Removing file for tar distribution"
	rm -f $(ROOT_DIR)/build
	rm -rf $(TAR_DIR)
    

.PHONY: distclean
distclean: initrd_clean clean

	@echo "Removing all generated and downloaded files"
	rm -rf $(ROOT_DIR)/src
	rm -f Makefile config.log config.status initrd/sali/bin/sali_functions initrd/functions/functions.mbm bootdisk/sali_create_bootdisk server/setup.py

.PHONY:	show_targets
show_targets:
	@echo
	@echo "General commands:"
	@echo " build"
	@echo "    Build everything."
	@echo " kernel"
	@echo "    Only build the kernel."
	@echo " initrd"
	@echo "    Builds the software for the initrd, skips kernel build!"
	@echo " tarball"
	@echo "    Make a tarball with the contents from ROOT_DIR/build."
	@echo
	@echo "Dynamic commands (available when imported in initrd.rul):"
	@echo " <name>"
	@echo "    Retrieve and build the .rul package in the directory $(SRC_DIR)"
	@echo " <name>_install"
	@echo "    Installs the .rul package to $(INITRD_BUILD_DIR)"
	@echo " <name>_clean"
	@echo "    Cleans the files of a .rul package in $(SRC_DIR)"

all: show_targets
